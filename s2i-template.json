{
    "kind": "Template",
    "apiVersion": "v1",
    "metadata": {
      "name": "springboot-ocp4-s2i-hello",
      "annotations": {
        "openshift.io/display-name": "spring boot application",
        "description": "Application template for springboot-helloworld  applications",
        "tags": "quickstart,java,springboot",
        "iconClass": "",
        "openshift.io/long-description": "This template defines resources needed to develop",
        "openshift.io/provider-display-name": "Red Hat, Inc.",
        "openshift.io/documentation-url": "https://github.com/sclorg/nodejs-ex",
        "openshift.io/support-url": "https://access.redhat.com",
        "template.openshift.io/bindable": "false"
      }
    },
    "message": "The following service(s)",
    "labels": {
        "template": "springboot-ocp4-s2i-hello",
        "app": "springboot-ocp4-s2i-hello"
    },
    "objects": [
      {
        "kind": "Service",
        "apiVersion": "v1",
        "metadata": {
          "name": "${NAME}"
        },
        "spec": {
          "ports": [
            {
              "name": "8080-tcp",
              "port": 8080,
              "targetPort": 8080
            }
          ],
          "selector": {
            "name": "${NAME}"
          }
        }
      },
      {
        "kind": "ImageStream",
        "apiVersion": "v1",
        "metadata": {
          "name": "${NAME}",
          "annotations": {
            "description": "Keeps track of changes in the application image"
          }
        }
      },
      {
        "kind": "BuildConfig",
        "apiVersion": "v1",
        "metadata": {
          "name": "${NAME}",
          "annotations": {
            "description": "Defines how to build the application",
            "template.alpha.openshift.io/wait-for-ready": "true"
          }
        },
        "spec": {
          "source": {
            "type": "Git",
            "git": {
              "uri": "${SOURCE_REPOSITORY_URL}",
              "ref": "${SOURCE_REPOSITORY_REF}"
            },
            "contextDir": "${CONTEXT_DIR}"
          },
          "strategy": {
            "type": "Source",
            "sourceStrategy": {
              "from": {
                "kind": "ImageStreamTag",
                "namespace": "${NAMESPACE}",
                "name": "java:openjdk-11-el7"
              }
            }
          },
          "output": {
            "to": {
              "kind": "ImageStreamTag",
              "name": "${NAME}:latest"
            }
          },
          "triggers": [
            {
              "type": "ImageChange"
            },
            {
              "type": "ConfigChange"
            }
          ],
          "postCommit": {}
        }
      },
      {
        "kind": "DeploymentConfig",
        "apiVersion": "v1",
        "metadata": {
          "name": "${NAME}",
          "annotations": {
            "description": "Defines how to deploy the application server",
            "template.alpha.openshift.io/wait-for-ready": "true"
          }
        },
        "spec": {
          "strategy": {
            "type": "Recreate"
          },
          "triggers": [
            {
              "type": "ImageChange",
              "imageChangeParams": {
                "automatic": true,
                "containerNames": [
                  "springboot-ocp4-s2i-hello"
                ],
                "from": {
                  "kind": "ImageStreamTag",
                  "name": "${NAME}:latest"
                }
              }
            },
            {
              "type": "ConfigChange"
            }
          ],
          "replicas": 1,
          "selector": {
            "name": "${NAME}"
          },
          "template": {
            "metadata": {
              "name": "${NAME}",
              "labels": {
                "name": "${NAME}"
              }
            },
            "spec": {
              "containers": [
                {
                  "name": "springboot-ocp4-s2i-hello",
                  "image": "springboot-ocp4-s2i-hello",
                  "ports": [
                    {
                      "containerPort": 8080,
                      "protocol": "TCP"
                    }
                  ],
                  "readinessProbe": {
                    "timeoutSeconds": 3,
                    "initialDelaySeconds": 3,
                    "httpGet": {
                      "path": "/",
                      "port": 8080
                    }
                  },
                  "livenessProbe": {
                    "timeoutSeconds": 3,
                    "initialDelaySeconds": 30,
                    "httpGet": {
                      "path": "/",
                      "port": 8080
                    }
                  },
                  "resources": {
                    "limits": {
                      "memory": "${MEMORY_LIMIT}"
                    }
                  }
                }
              ]
            }
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "NAME",
        "displayName": "Name",
        "description": "The name assigned to all of the frontend objects defined in this template.",
        "required": true,
        "value": "springboot-ocp4-s2i-hello"
      },
      {
        "name": "NAMESPACE",
        "displayName": "Namespace",
        "description": "The OpenShift Namespace where the ImageStream resides.",
        "required": true,
        "value": "openshift"
      },
      {
        "name": "MEMORY_LIMIT",
        "displayName": "Memory Limit",
        "description": "Maximum amount of memory the Node.js container can use.",
        "required": true,
        "value": "512Mi"
      },
      {
        "name": "SOURCE_REPOSITORY_URL",
        "displayName": "Git Repository URL",
        "description": "The URL of the repository with your application source code.",
        "required": true,
        "value": "https://github.com/malam84/springboot-ocp4-s2i-hello.git"
      },
      {
        "name": "SOURCE_REPOSITORY_REF",
        "displayName": "Git Reference",
        "description": "Set this to a branch name, tag or other ref of your repository if you are not using the default branch."
      },
      {
        "name": "CONTEXT_DIR",
        "displayName": "Context Directory",
        "description": "Set this to the relative path to your project if it is not in the root of your repository."
    },
      {
        "name": "APPLICATION_DOMAIN",
        "displayName": "Application Hostname",
        "description": "The exposed hostname that will route to the Node.js service, if left blank a value will be defaulted.",
        "value": ""
      }
    ]
  }
